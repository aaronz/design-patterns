<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>
<groupId>com.aaronz</groupId>
<artifactId>design-patterns</artifactId>
<version>0.0.1-SNAPSHOT</version>
<packaging>pom</packaging>
<inceptionYear>2020</inceptionYear>
<properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <junit.version>4.13.1</junit.version>
    <junit-jupiter.version>5.5.2</junit-jupiter.version>
    <compiler.version>3.8.1</compiler.version>
    <slf4j.version>1.7.28</slf4j.version>
    <jacoco.version>0.8.4</jacoco.version>
</properties>
<modules>
    <module>builder</module>
</modules>
<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-migrationsupport</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit-vintage.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</dependencyManagement>
<dependencies>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
    </dependency>
</dependencies>
<build>
    <pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.version}</version>
                <!-- <configuration>
                    <source>1</source>
                    <target>1</target>
                </configuration> -->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <argLine>-Xmx1024M ${argLine}</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <!-- below two line make sure the fat jar is sharing the same name
                                as of project name -->
                            <finalName>${project.artifactId}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </pluginManagement>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
                <execution>
                    <id>validate</id>
                    <goals>
                        <goal>check</goal>
                    </goals>
                    <phase>validate</phase>
                    <configuration>
                        <configLocation>google_checks.xml</configLocation>
                        <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
                        <encoding>UTF-8</encoding>
                        <failOnViolation>false</failOnViolation>
                        <violationSeverity>warning</violationSeverity>
                        <includeTestSourceDirectory>false</includeTestSourceDirectory>
                    </configuration>
                </execution>
            </executions>
        </plugin>

        <!-- Resolves ${projectRoot} to the project root directory. Used by the
            license-maven-plugin to find the correct location of license-plugin-header-style.xml
            when built from a submodule directory. -->
        <plugin>
            <groupId>org.commonjava.maven.plugins</groupId>
            <artifactId>directory-maven-plugin</artifactId>
            <version>0.3.1</version>
            <executions>
                <execution>
                    <id>directories</id>
                    <goals>
                        <goal>directory-of</goal>
                    </goals>
                    <phase>initialize</phase>
                    <configuration>
                        <property>projectRoot</property>
                        <project>
                            <groupId>com.aaronz</groupId>
                            <artifactId>design-patterns</artifactId>
                        </project>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <!-- <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <version>3.0</version>
            <configuration>
                <header>com/mycila/maven/plugin/license/templates/MIT.txt</header>
                <properties>
                    <owner>Ilkka Seppälä</owner>
                </properties>
                <skipExistingHeaders>true</skipExistingHeaders>
                <headerDefinitions>
                    <headerDefinition>${projectRoot}${file.separator}license-plugin-header-style.xml</headerDefinition>
                </headerDefinitions>
                <mapping>
                    <java>SLASHSTAR_CUSTOM_STYLE</java>
                </mapping>
                <excludes>
                    <exclude>.github/FUNDING.yml</exclude>
                </excludes>
            </configuration>
            <executions>
                <execution>
                    <id>install-format</id>
                    <phase>install</phase>
                    <goals>
                        <goal>format</goal>
                    </goals>
                </execution>
            </executions>
        </plugin> -->

        <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
                <execution>
                    <id>prepare-agent</id>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                </execution>
                <execution>
                    <id>report</id>
                    <goals>
                        <goal>report</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>

        <!-- <plugin>
            <groupId>com.aaronz.urm</groupId>
            <artifactId>urm-maven-plugin</artifactId>
            <version>1.4.8</version>
            <configuration>
                <outputDirectory>${project.basedir}/etc</outputDirectory>
                <packages>
                    <param>com.aaronz</param>
                </packages>
                <includeMainDirectory>true</includeMainDirectory>
                <includeTestDirectory>false</includeTestDirectory>
                <presenter>plantuml</presenter>
            </configuration>
            <executions>
                <execution>
                    <phase>process-classes</phase>
                    <goals>
                        <goal>map</goal>
                    </goals>
                </execution>
            </executions>
        </plugin> -->

    </plugins>
</build>
<reporting>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jxr-plugin</artifactId>
            <version>3.0.0</version>
        </plugin>
    </plugins>
</reporting>
</project>